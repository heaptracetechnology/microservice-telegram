omg: 1
lifecycle:
  startup:
    command: ["microservice-telegram"]
info:
  version: 1.0.0
  title: Telegram
  description: This is a telegram service
  contact:
    name: Rohit Shetty
    url: https://github.com/ht68rohit
    email: rohits@heaptrace.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT 
actions:
  bot:
    help: Start a Telegram bot
    events:
      hears:
        help: Triggered anytime when any new message is posted in channel
        arguments: 
          channel:
            type: string
            in: requestBody
            required: true
            help: The channel to subscribe
        http: 
          port: 3000
          subscribe:
            method: post
            path: /subscribe
            contentType: application/json
          unsubscribe:
            path: /unsubscribe
            method: post
            contentType: application/json
        output: 
          contentType: application/json
          type: object
          properties:
            update_id:
              help: The update ID of new message
              type: string
            channel_post:
              help: The object of channel post with message ID, channel name etc.
              type: map
            text:
              help: The text message from channel
              type: string
  get_bot:
    help: Get object with bot details
    http:
      port: 3000
      method: get
      path: /getbot
      contentType: application/json
    output:
      type: object
      contentType: application/json
      properties:
        id:
          help: The bot ID
          type: int
        first_name:
          help: The first name
          type: string
        last_name:
          help: The last name
          type: string
        username:
          help: The bot username
          type: string
        is_bot:
          help: The boolean value as true/false
          type: boolean
  send:
    help: Send message from bot to group or user
    http:
      port: 3000
      method: post
      path: /send
      contentType: application/json
    arguments:
      chat_id:
        type: int
        in: requestBody
        required: true
        help: The chat id of group
      message:
        type: string
        in: requestBody
        required: true
        help: The text message to be send
    output:
      type: object
      contentType: application/json
      properties:
        message_id:
          help: The message ID
          type: int
        from:
          help: The object with bot details.
          type: object
        chat:
          help: The chat object with chat details.
          type: object
        text:
          help: The message text
          type: string
  channel_message:
    help: Send message to channel from bot
    http:
      port: 3000
      method: post
      path: /sendchannelmessage
      contentType: application/json
    arguments:
      username:
        type: string
        in: requestBody
        required: true
        help: The username of channel
      message:
        type: string
        in: requestBody
        required: true
        help: The text message to be send
    output:
      type: object
      contentType: application/json
      properties:
        message_id:
          help: The message ID
          type: int
        chat:
          help: The chat object with details(ID, type, title,username)
          type: object
        text:
          help: The text message
          type: string
  get_chat:
    help: Get object with chat details
    http:
      port: 3000
      method: post
      path: /getchat
      contentType: application/json
    arguments:
      chat_id:
        type: int
        in: requestBody
        required: true
        help: The chat Id of telegram conversation
    output:
      type: object
      contentType: application/json
      properties:
        id:
          help: The bot ID
          type: int
        first_name:
          help: The first name
          type: string
        last_name:
          help: The last name
          type: string
        username:
          help: The bot username
          type: string
        is_bot:
          help: The boolean value as true/false
          type: boolean
  leave_chat:
    help: Leave group using chat ID
    http:
      port: 3000
      method: post
      path: /leavechat
      contentType: application/json
    arguments:
      chat_id:
        type: int
        in: requestBody
        required: true
        help: The chat ID from where to leave bot
    output:
      type: object
      contentType: application/json
      properties:
        ok:
          help: It return boolean value true/false
          type: boolean
        result:
          help: The result will return boolean value true/false
          type: boolean
        error_code:
          help: The error code
          type: int
  send_photo:
    help: Send photo to group by bot
    http:
      port: 3000
      method: post
      path: /sendphoto
      contentType: application/json
    arguments:
      chat_id:
        type: int
        in: requestBody
        required: false
        help: The chat ID where image is to be send
      image:
        type: string
        in: requestBody
        required: false
        help: The image base64 data.
    output:
      type: object
      contentType: application/json
      properties:
        message_id:
          help: It return integer message Id. 
          type: int
        from:
          help: The object of User.
          type: object
        chat:
          help: The chat details
          type: object
        photo:
          help: The object of Photo along with file Id.
          type: object
environment:
  BOT_TOKEN:
    type: string
    required: true
    help: Access token key for app  
